{"version":3,"file":"playback-tone-seq.js","sourceRoot":"","sources":["../src/deprecated/playback-tone-seq.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Trying to work with Part for Tone.js sequencing\n */\n\nimport { ReactiveController, ReactiveElement } from 'lit';\nimport * as Tone from 'tone';\nimport { NoteEvent } from '../utils/noteevent';\nimport { getNotation } from '../utils/music';\nimport { Part } from 'tone';\n\nexport class PlaybackToneSeq implements ReactiveController {\n    static hosts: ReactiveElement[] = [];\n\n    protected static synth?: Tone.PolySynth;\n    protected static playbackRate = 1;\n    protected static duration = 0;\n    protected static loopStart?: number = undefined;\n    protected static loopEnd?: number = undefined;\n\n    protected static part?: Part;\n\n    protected static isPlaying = false;\n    protected static isPaused = false;\n\n    constructor(host: ReactiveElement) {\n        host.addController(this);\n        PlaybackToneSeq.hosts.push(host);\n    }\n\n    hostConnected() {}\n\n    hostDisconnected() {}\n\n    static set sequence(events: NoteEvent[]) {\n        PlaybackToneSeq.synth = new Tone.PolySynth(Tone.Synth).toDestination();\n        PlaybackToneSeq.part = new Tone.Part((time, value) => {\n            PlaybackToneSeq.synth?.triggerAttackRelease(\n                getNotation(value.note),\n                value.duration, time,\n                value.velocity / 127);\n        }, events);\n        PlaybackToneSeq.duration = events[events.length - 1].time + events[events.length - 1].duration;\n        PlaybackToneSeq.part.loop = true;\n        PlaybackToneSeq.part.loopStart = PlaybackToneSeq.loopStart ? PlaybackToneSeq.loopStart : 0;\n        PlaybackToneSeq.part.loopEnd = PlaybackToneSeq.loopEnd ? PlaybackToneSeq.loopEnd : PlaybackToneSeq.duration;\n\n    }\n\n    static play() {\n        if (!PlaybackToneSeq.isPlaying && !PlaybackToneSeq.isPaused) {\n            Tone.getTransport().start();\n            PlaybackToneSeq.part?.start();\n            PlaybackToneSeq.isPlaying = true;\n            PlaybackToneSeq.isPaused = false;\n        } else if (PlaybackToneSeq.isPaused) {\n            Tone.getTransport().start();\n            PlaybackToneSeq.isPaused = false;\n            PlaybackToneSeq.isPlaying = true;\n        }\n    }\n\n    play() { PlaybackToneSeq.play(); }\n\n    static seek(time: number) {\n        Tone.getTransport().seconds = time;\n    }\n\n    seek(time: number) { PlaybackToneSeq.seek(time); }\n\n    static pause() {\n        Tone.getTransport().pause();\n        PlaybackToneSeq.isPaused = true;\n        PlaybackToneSeq.isPlaying = false;\n    }\n\n    pause() { PlaybackToneSeq.pause(); }\n\n    static stop() {\n        Tone.getTransport().stop();\n        Tone.getTransport().cancel();\n        PlaybackToneSeq.part?.stop();\n        PlaybackToneSeq.part?.cancel();\n        PlaybackToneSeq.synth?.releaseAll();\n    }\n\n    static get currentTime() {\n        if (PlaybackToneSeq.part && PlaybackToneSeq.duration) {\n            if (PlaybackToneSeq.loopStart && PlaybackToneSeq.loopEnd) {\n                return Tone.getTransport().seconds % (PlaybackToneSeq.loopEnd - PlaybackToneSeq.loopStart);\n            } else {\n                console.log(Tone.getTransport().seconds);\n                return Tone.getTransport().seconds;\n            }\n        }\n        return 0;\n    }\n\n    static set rate(val: number) {\n        if (PlaybackToneSeq.part) {\n            PlaybackToneSeq.part.playbackRate = val;\n        }\n        PlaybackToneSeq.playbackRate = val;\n        PlaybackToneSeq.hosts.forEach(host => {\n            host.requestUpdate();\n        });\n    }\n\n    static get rate() {\n        return PlaybackToneSeq.playbackRate;\n    }\n\n    get rate() { return PlaybackToneSeq.rate; }\n\n    set rate(val: number) {\n        PlaybackToneSeq.playbackRate = val;\n    }\n\n    static loop(start: number, end: number) {\n        if (PlaybackToneSeq.part) {\n            PlaybackToneSeq.part.loopStart = start;\n            PlaybackToneSeq.part.loopEnd = end;\n        }\n        PlaybackToneSeq.loopStart = start;\n        PlaybackToneSeq.loopEnd = end;\n    }\n\n    loop(start: number, end: number) { PlaybackToneSeq.loop(start, end); }\n\n}"]}