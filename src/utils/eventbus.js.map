{"version":3,"file":"eventbus.js","sourceRoot":"","sources":["eventbus.ts"],"names":[],"mappings":"AAKA,MAAM,OAAO,QAAQ;IAGjB;;OAEG;IACH,MAAM,CAAC,gBAAgB,CAAC,IAAY,EAAE,QAAkB;QACpD,MAAM,QAAQ,GAAkB,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;QACnD,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClC,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,mBAAmB,CAAC,QAAiB;QACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAChD,IAAI,QAAQ,KAAK,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBACpC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChC,OAAO;aACV;SACJ;IACL,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,oBAAoB,CAAC,SAA0B;QAClD,SAAS,CAAC,OAAO,CAAC,CAAC,QAAuB,EAAE,EAAE;YAC1C,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,aAAa,CAAC,EAAS;QAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACzC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC;YACzB,IAAI,EAAE,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE;gBACpB,YAAY;gBACZ,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAChC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;;AA9CgB,kBAAS,GAAoB,EAAE,CAAC","sourcesContent":["export interface EventListener {\n    type: string;\n    callback: Function;\n}\n\nexport class EventBus {\n    protected static listeners: EventListener[] = [];\n\n    /**\n     * Add event listener.\n     */\n    static addEventListener(type: string, callback: Function): EventListener {\n        const listener: EventListener = { type, callback };\n        EventBus.listeners.push(listener);\n        return listener;\n    }\n\n    /**\n     * Remove event listener.\n     * @param listener - Event listener to remove.\n     */\n    static removeEventListener(listener: unknown) {\n        for (let c = 0; c < EventBus.listeners.length; c++) {\n            if (listener === EventBus.listeners[c]) {\n                EventBus.listeners.splice(c, 1);\n                return;\n            }\n        }\n    }\n\n    /**\n     * Remove event listeners.\n     * @param listeners - List of event listeners to remove.\n     */\n    static removeEventListeners(listeners: EventListener[]) {\n        listeners.forEach((listener: EventListener) => {\n            EventBus.removeEventListener(listener);\n        });\n    }\n\n    /**\n     * Trigger event.\n     * @param ce - Custom event to dispatch.\n     */\n    static dispatchEvent(ce: Event) {\n        const listeners = this.listeners.slice();\n        listeners.forEach(function (l) {\n            if (ce.type === l.type) {\n                //@ts-ignore\n                l.callback.apply(this, [ce]);\n            }\n        });\n    }\n}\n"]}